<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yubikey on caiyy17</title>
    <link>https://caiyy17.github.io/tags/yubikey/</link>
    <description>Recent content in yubikey on caiyy17</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Sep 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://caiyy17.github.io/tags/yubikey/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>yubikey1:个人安全与yubikey</title>
      <link>https://caiyy17.github.io/posts/computer/yubikey1_%E4%B8%AA%E4%BA%BA%E5%AE%89%E5%85%A8/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://caiyy17.github.io/posts/computer/yubikey1_%E4%B8%AA%E4%BA%BA%E5%AE%89%E5%85%A8/</guid>
      <description>个人安全问题 yubikey  作为键盘设备（HID） U2F OpenPGP Smart Card   个人安全模型  个人信息安全需求 密码个数 构成及解密方式 个人安全模型  成分   安全性分析   后话 2019.1.19 更新 参考  个人安全问题 如今网络十分混乱，各种信息极其容易被窃取（比如说斯诺登事件），加密和认证就显得极其重要，而 yubikey 就是这样一个简易的设备（支持 OTP、公钥加密签名、U2F 协议）。
yubikey 来自 wiki：YubiKey 是由 Yubico 生产的身份认证设备，支持一次性密码（OTP）、公钥加密和身份认证，以及由 FIDO 联盟（FIDO U2F）开发的通用第二因素（U2F）协议。它让用户可以透过提交一次性密码或是使用设备产生的公开/私密金钥来安全地登录自己的帐户。针对不支持一次性密码的网站，YubiKey 也可以存储静态密码。Facebook 使用 YubiKey 作为员工凭证；Google 同时为雇员和用户提供支持。还有一些密码管理器也支持 YubiKey。
作为键盘设备（HID） 这是它主要介绍的功能，能够模拟键盘设备向电脑输入一串生成的密码，兼容性最好。其中还包含多种模式：OTP、Static、Challenge-Response、HTOP，
 OTP: KEY_ID+AES(AES_KEY, SECRET, COUNT++)即生成的密码包含明文的 KEY_ID 和对称加密的 SECRET 和计数器。第一次使用前需要把 KEY_ID，AES_KEY，SECRET 提交至验证服务器（Yubico 提供或者自己搭建），之后应用程序每次通过服务器验证密码的可靠性（解码后 SECRET 对应、COUNT 增大（防止重放攻击））。 Static: 静态密码。顾名思义，每次生成固定的一串密码（并没有什么用）。 Challenge-Response: HMAC(SECRET, INPUT)即可以通过 HID 接口给定一个输入，输入 HMAC 的计算结果。输入需要本地代码实现。 HOTP: HMAC(SECRET, COUNTER++)算法与 Challenge-Response 类似，然而使用累加计数器代替了输入，并且 HTOP 是一个标准协议，许多网站和设备都兼容该标准。  在 YubiKey 中包含两个 configuration slot，每一个 slot 可以单独配置以上模式中的其中一种，通过短触和长触来选择输入。</description>
    </item>
    
  </channel>
</rss>
