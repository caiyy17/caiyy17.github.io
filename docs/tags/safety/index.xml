<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>safety on caiyy17</title>
    <link>https://caiyy17.github.io/tags/safety/</link>
    <description>Recent content in safety on caiyy17</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://caiyy17.github.io/tags/safety/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VPS1:购买以及设置</title>
      <link>https://caiyy17.github.io/posts/computer/vps1_%E8%B4%AD%E4%B9%B0%E4%BB%A5%E5%8F%8A%E8%AE%BE%E7%BD%AEvps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://caiyy17.github.io/posts/computer/vps1_%E8%B4%AD%E4%B9%B0%E4%BB%A5%E5%8F%8A%E8%AE%BE%E7%BD%AEvps/</guid>
      <description>前言 对于一个准备完计算机的喜欢折腾的学生来说，拥有一台自己的服务器是十分有必要的，在那上面，可以干许许多多事情。
Github 学生包 相信大家对 github 都不陌生，但 github 上除了代码管理和社区之外，github 提供的学生包也是个非常不错的东西。学生包获取方法就根据提示一步一步来就行，需要学校邮箱。
其中个人暂时用到的有：
 DigitalOcean 上 50 刀的代金券 AWS 上 150 刀代金券 Namecheap 一年的免费.me 域名  这些基本都和 VPS 有关，本文主要介绍 DO 上的 VPS，这个也比较简单。
DigitalOcean 注册 DO，需要用 paypal 或者信用卡向其中充值 5 美金，就可以注册完成了。完成后，在 DO 网站中输入学生包优惠码，会发现账户变成了 55 美金，这样就可以用基础套餐 11 个月了。
然后添加 Droplets，我使用的是 centos，最基础的套餐（5 刀一个月），用校园网的话记得勾选 ipv6，然后 添加一个 sshkey （这一步很重要，不然申请完成后需要再设置这个 VPS 很多步）
然后就完成了基本操作，可以使用电脑连接服务器了。
设置防火墙 DO 提供了十分方便的防火墙设置，可以控制进出开放的端口，然后你可以只开你需要的端口，可以免去在 VPS 里面设置防火墙，甚至可以把里面的防火墙关了。
这里一般会设置几套防火墙，每一套之间是叠加的，就是最终开放的端口是所有防火墙组的开发端口的并集。可以有前段防火墙开发基本端口，然后 ss 防火墙专门开发 socks 协议使用的端口&amp;hellip;&amp;hellip;这个就看自己组合了。
我这边是开了 ssh 使用的 22 端口；网站的 443 和 1080 端口；以及 ss 或者 v2ray 使用的端口（自己设置）。如果不用网站，可以将 443 或者 1080 作为翻墙端口。</description>
    </item>
    
    <item>
      <title>VPS2:socks协议以及ss设置</title>
      <link>https://caiyy17.github.io/posts/computer/vps2_socks%E5%8D%8F%E8%AE%AE%E4%B8%8Ess%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://caiyy17.github.io/posts/computer/vps2_socks%E5%8D%8F%E8%AE%AE%E4%B8%8Ess%E8%AE%BE%E7%BD%AE/</guid>
      <description>Socks 协议 Socket Secure(SOCKS)是一个网络协议，可以通过代理服务器来路由客户端和服务器之间的数据包。一个 SOCKS 服务器可以代理 TCP 连接到任何一个 IP 地址，同时为 UDP 的数据包提供一种转发方式。 SOCKS 完成的是 OSI 模型中第五层的工作（会话层，位于表示层和传输层之间）
历史 这个协议最初由 David Koblas 创造，David Koblas 是 MIPS 计算系统的管理员，在 1992 年 MIPS 被 Silicon Graphics 接管之后，Koblas 在那年的 Usenix 安全研讨会上发表了关于 SOCKS 的一篇文章，让 SOCKS 为公众所知。
SOCKS5 协议最初是一个安全协议被用来更容易的管控防火墙和其他安全产品，在 1996 年被 IETF 所批准，并与 Aventail 公司合作开发。
用途 SOCKS 是 Circuit-level gateway（注：Circuit-level gateway 是一种防火墙）事实上的标准
另外一种 SOCKS 的使用方式是作为规避工具，允许流量绕过网络过滤来获得内容，否则就被政府，学校，一些具体国家的 web 服务堵塞。（就是翻墙&amp;hellip;）
而 shadowsocks 就是这样的一款软件。
ss 设置 说这么多，就让我们在服务器上装 ss 吧
配置环境 安装 pip，接着安装 ss。</description>
    </item>
    
    <item>
      <title>yubikey1:个人安全与yubikey</title>
      <link>https://caiyy17.github.io/posts/computer/yubikey1_%E4%B8%AA%E4%BA%BA%E5%AE%89%E5%85%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://caiyy17.github.io/posts/computer/yubikey1_%E4%B8%AA%E4%BA%BA%E5%AE%89%E5%85%A8/</guid>
      <description>个人安全问题 yubikey  作为键盘设备（HID） U2F OpenPGP Smart Card   个人安全模型  个人信息安全需求 密码个数 构成及解密方式 个人安全模型  成分   安全性分析   后话 2019.1.19 更新 参考  个人安全问题 如今网络十分混乱，各种信息极其容易被窃取（比如说斯诺登事件），加密和认证就显得极其重要，而 yubikey 就是这样一个简易的设备（支持 OTP、公钥加密签名、U2F 协议）。
yubikey 来自 wiki：YubiKey 是由 Yubico 生产的身份认证设备，支持一次性密码（OTP）、公钥加密和身份认证，以及由 FIDO 联盟（FIDO U2F）开发的通用第二因素（U2F）协议。它让用户可以透过提交一次性密码或是使用设备产生的公开/私密金钥来安全地登录自己的帐户。针对不支持一次性密码的网站，YubiKey 也可以存储静态密码。Facebook 使用 YubiKey 作为员工凭证；Google 同时为雇员和用户提供支持。还有一些密码管理器也支持 YubiKey。
作为键盘设备（HID） 这是它主要介绍的功能，能够模拟键盘设备向电脑输入一串生成的密码，兼容性最好。其中还包含多种模式：OTP、Static、Challenge-Response、HTOP，
 OTP: KEY_ID+AES(AES_KEY, SECRET, COUNT++)即生成的密码包含明文的 KEY_ID 和对称加密的 SECRET 和计数器。第一次使用前需要把 KEY_ID，AES_KEY，SECRET 提交至验证服务器（Yubico 提供或者自己搭建），之后应用程序每次通过服务器验证密码的可靠性（解码后 SECRET 对应、COUNT 增大（防止重放攻击））。 Static: 静态密码。顾名思义，每次生成固定的一串密码（并没有什么用）。 Challenge-Response: HMAC(SECRET, INPUT)即可以通过 HID 接口给定一个输入，输入 HMAC 的计算结果。输入需要本地代码实现。 HOTP: HMAC(SECRET, COUNTER++)算法与 Challenge-Response 类似，然而使用累加计数器代替了输入，并且 HTOP 是一个标准协议，许多网站和设备都兼容该标准。  在 YubiKey 中包含两个 configuration slot，每一个 slot 可以单独配置以上模式中的其中一种，通过短触和长触来选择输入。</description>
    </item>
    
    <item>
      <title>yubikey2:配置和gnupg</title>
      <link>https://caiyy17.github.io/posts/computer/yubikey2_%E8%AE%BE%E7%BD%AE%E5%92%8Cgnupg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://caiyy17.github.io/posts/computer/yubikey2_%E8%AE%BE%E7%BD%AE%E5%92%8Cgnupg/</guid>
      <description>设置 yubikey  初始化 U2F PIV   GPG  安装 gnupg 生成要最终导入 yubikey 的密钥 导出密钥 设置 yubikey 的 pin 设置 yubikey 的 PGP 测试 SSH 注意   后记  设置 yubikey 讲完了安全模型，就可以开始设置 yubikey 了
需要设置的有这些：
 次重要密码导入 slot1 Master 密码导入 slot2 yubikey 的 pin（Masterpin） 管理员 8 位 pin（特殊 pin） GPGkey（因为需要备份，我们从外部导入） PIV（Masterpin） U2F  从简单的开始
初始化 下载 yubikey manager，然后打开所有功能。在 OTP 里设置 slot1 和 slot2
U2F 在支持的网站里双重验证下添加 key，然后按一下 yubikey 就行了</description>
    </item>
    
  </channel>
</rss>
