<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markdown on caiyy17</title>
    <link>https://caiyy17.github.io/tags/markdown/</link>
    <description>Recent content in Markdown on caiyy17</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://caiyy17.github.io/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Markdown3:配合Pandoc</title>
      <link>https://caiyy17.github.io/posts/computer/markdown3_%E9%85%8D%E5%90%88pandoc/</link>
      <pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://caiyy17.github.io/posts/computer/markdown3_%E9%85%8D%E5%90%88pandoc/</guid>
      <description>前言 从 Md1 到 Md2，基本的 Markdown 写作已经没有问题了，然后就会想用 md 解决其他的事情了，比如写学术论文，Latex 写起来太费劲了，公式还是 word 比较方便。
Pandoc 是一个开源的万能文档转换软件，可以在 pdf，md，word，html 之间转换文档格式。而装了 vscode-pandoc 后可以直接在 vscode 中使用，但是每次只能用同样的命令行参数，否则只能在终端中使用。
安装 直接 brew 安装即可，还要安装 pandoc-citeproc，vscode 插件也是一键安装。
然后是配置，word 不需要配置，html 需要配置命令行参数，在设置的 string 里面填入就行。
html 参数 --standalone --self-contained --css pandoc.css 以上转换命令中选项含义介绍如下。
 “–standalone”：为目标格式文件增加合适的“header”和“footer”。如果目标格式是“HTML”，那么通过该选项可解决“由于未设置合适的字符编码，而导致的乱码问题”。 “–self-contained” ：如果目标格式是“HTML”，那么可得到如下效果：在转换得到目标 HTML 文件的过程中，会将依赖的“脚本，CSS，图片，视频”等文件的内容内嵌到目标 HTML 文件中。 “–css pandoc.css” ：使得目标格式文件最后使用“pandoc.css”文件作为 CSS 文件，否则，使用默认的 CSS 文件。  PDF 参数 pdf 需要 latex 的支持，mac 可以装 Mactex，Win 有 texlive（不过要配置环境变量）
然而当你尝试的时候就会有各种 bug，网上也有解决方案，但都不是很漂亮，所以我就放弃了这个选项&amp;hellip;&amp;hellip;
所以 最终我选择了把 md 转为 word 然后可以使用 word 的公式编辑器编写公式&amp;hellip;&amp;hellip;</description>
    </item>
    
    <item>
      <title>Markdown2:转换及发布</title>
      <link>https://caiyy17.github.io/posts/computer/markdown2_%E8%BD%AC%E6%8D%A2%E5%8F%8A%E5%8F%91%E5%B8%83/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://caiyy17.github.io/posts/computer/markdown2_%E8%BD%AC%E6%8D%A2%E5%8F%8A%E5%8F%91%E5%B8%83/</guid>
      <description>前言 为了可以用自己喜欢的排版风格排版 Markdown，需要将其转换成其他有丰富排版功能的格式，最重要的无非是 html 和 tex，本文主要讲 html 的转换。
转至 html 后便可以配合已经编写好的.css 文件，统一排版成自己想要的格式。便可以发布在自己的网站上了。然而自己便携插件还是有些困难，好在有 hexo 或者 markdownhere 等软件和插件的帮助。前者可以帮助我们制作博客，后者可以直接在 chrome 中将 markdown 原文在公众号网站中转换为带格式的文本。
之后就不需要麻烦的公众号编辑器，只需要每次写 Markdown 就行了。
Markdown 对 html 的支持 这里说一下 Markdown 原生对 html 的支持。Markdown 的语法默认有对应的 html 语法，对应如下：(html 闭合部分省略，详细结构可以查 html 相应格式)
   Markdown html     段落（两个换行符） &amp;lt;p&amp;gt;   x 级标题 &amp;lt;nx&amp;gt;   无序列表 &amp;lt;ul&amp;gt;   有序列表 &amp;lt;ol&amp;gt;   代码块 &amp;lt;code&amp;gt;   引用 &amp;lt;blockquote&amp;gt;   分割线 &amp;lt;hr/&amp;gt;   表格 &amp;lt;table&amp;gt;   链接 &amp;lt;a&amp;gt;   图片 &amp;lt;img&amp;gt;   *强调 &amp;lt;em&amp;gt;   **强调 &amp;lt;strong&amp;gt;    而在 Markdown 中也可以自由插入 html 的代码，转换器会在转换的时候保留 html 的代码保持不动（有可能需要设置一下）。例如&amp;lt;br/&amp;gt;</description>
    </item>
    
    <item>
      <title>Markdown1:简易的文本格式</title>
      <link>https://caiyy17.github.io/posts/computer/markdown1_%E7%AE%80%E6%98%93%E7%9A%84%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://caiyy17.github.io/posts/computer/markdown1_%E7%AE%80%E6%98%93%E7%9A%84%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F/</guid>
      <description>前言 Markdown 是一种轻量级的标记语言，它可以被转换为 HTML 格式的内容。
Markdown 概述 Markdown 的宗旨便是易写易读，即便一篇 Markdown 文档直接以纯文本形式发布，其内容同样易于阅读。同时，Markdown 提供了便捷的排版功能，尤其在转换为 HTML 格式后，在网页上使用非常方便。
在这里吐槽一下：
微信公众号的各种排版工具和网站实在是过于复杂，虽然它们也许可以实现很多非常花哨的功能，但是一点点调整一点点排版十分的反人类，又不是要做一张海报，我觉得一个非常简洁的工具才是比较好的。
至于 LaTeX，我个人认为其编辑效率并不理想，在编辑公式方面，Word 自带的公式编辑器（并非 MathType）的速度和便捷性实际上相当出色。另外，LaTeX 对浮动体的处理并不是特别友好，相比之下，Word 的嵌入功能会好很多（虽然它有时候会更占地方，但对于强迫症来说，我总希望所有物体出现在它该出现的地方&amp;hellip;）。只有在交叉引用方面，LaTeX 会比 Word 方便很多。
吐槽完毕&amp;hellip;
Markdown 语法 好了，我们正式开始。
换行 和 Latex 差不多 Markdown 使用一个空行来换行
例：
这是一个段落这是一个段落 效果：
 这是一个段落
这是一个段落
 当然，Markdown 也可以使用在行末尾加上两个或以上空格加来换行。（其实是在末尾加了&amp;lt;br/&amp;gt;）
这是一个段落（末尾有两个空格）这是一个段落 效果：
 这是一个段落
这是一个段落
 会发现这样的的强制换行间距与空行换行不一样
标题 Markdown 支持 6 级标题，分别用不一样数量的#来标记注意一定要在#后面加空格
例：
# 这是H1## 这是H2###### 这是H6 效果：
 这是 H1 这是 H2 这是 H6  引用 引用和 email 中的很像，在引用区块的每行前面加一个或多个&amp;gt;（几个就是几级）</description>
    </item>
    
  </channel>
</rss>
